running average - prevents erroneous readings since sometimes 5cm might become 120cm
	-if 120cm was seen on the left, it would immediately turn, which is bad if its  in a hallway

path correction - so we don't run into walls

encapsulate all robot functions to jerry class
encapusulate turnLeft instead of just calling motor.right(50), prevents lots of turns being added. just adds once


prevent loops in functions so that a function doesn't take over the program
(i.e isGoal() doesn't make you turn beceause it would skew the path)


rewrote stepper library since we used inverted pins to step up the voltage
by using transistor level shifter that 
path optimization

challenge using two pcb's, leads to many hardware issues.
we couldn't just assume something was a software error.

implemenmtned motors to turn off - saves lots of energy

robot straight a bit when it senses an opening so it doens't cut a wall since the sensor is towards the front of robot